using bc.common
using bc.planes
using bc.actors
using bc.actors.Ego
using bc.wildlife
using bc.wildlife.Diet
using bc.elementals
using flecs.doc

// use with `$[name]`
const PI = 3.141592
const TAU = 6.283185

// Overworld setup
Overworld {
    // +/- 10c over a year
    - Season {temperatureRange: 1000, cycleLength: 24 * 360}
}

Prefab ActorPrefab {
    - OVERRIDE|Position
    - OVERRIDE|Destination
    - OVERRIDE|Condition
    // NOTE: no simple way to avoid inheriting this description, so must override for at least direct inheritors of ActorPrefab
    - (Description, Brief) {"Base prefab for other actors, doesn't do anything on its own"}
}

Prefab PlayerPrefab : ActorPrefab {
    - (Ego, EgoNone)
    - MapVision {range: 3}
    - ActorSize {ACTOR_SIZE_AVERAGE}
    - (Description, Brief) {"Player instances reveal the map wherever they move"}
}

Prefab PredatorPack : ActorPrefab {
    - (Ego, EgoPredator)
    - (Diet, Meat)
    - Condition {maxHealth: 30, health: 30, maxStamina: 150, stamina: 150}
    - Group {count: 20}
    - bc.actors.GrowthRate {stepsRequired: 360 * 24, progress: 0}
    - OVERRIDE|Condition
    - OVERRIDE|Group
    - OVERRIDE|bc.actors.GrowthRate
    - ActorSize {ACTOR_SIZE_AVERAGE}
    - (Description, Brief) {"(Not implemented) Predator packs follow grazer trails and hunt when hungry"}
}

Prefab GrazerHerd : ActorPrefab {
    - (Ego, EgoGrazer)
    - (Diet, Grasses)
    - Condition {maxHealth: 100, health: 100, maxStamina: 25, stamina: 25}
    - Group {count: 1000}
    - bc.actors.GrowthRate {stepsRequired: 360 * 24, progress: 0}
    - OVERRIDE|Condition
    - OVERRIDE|Group
    - OVERRIDE|bc.actors.GrowthRate
    - ActorSize {ACTOR_SIZE_LARGE}
    - (Description, Brief) {"Grazer herds look for plentiful, undisturbed grasslands"}
}

Prefab TectonicSpiritPrefab {
    - ElementalSpirit
    - (Ego, EgoTectonicSpirit)
    - OVERRIDE|Position
    - OVERRIDE|Destination
    - OVERRIDE|AngleRadians
    - OVERRIDE|Elevation
    - OVERRIDE|SpiritPower
    - SpiritPower {maxValue: 65535}
    - SpiritLifetime {youngSteps: 40, matureSteps: 200, oldSteps: 40}
    - PlateShiftStrength {left: 50, right: -50}
    - (RandomizeFloat, AngleRadians) {min: 0, max: $TAU}
    - (Description, Brief) {"Tectonic Spirits move forward in a jagged arc, shifting the land around them"}
}

// Everest is 8800 meters high = 88 height units
Prefab MountainSpirit : TectonicSpiritPrefab {
    - SpiritLifetime {youngSteps: 100, matureSteps: 10, oldSteps: 100}
    - (RandomizeInt, PlateShiftStrength.left) {min: 70, max: 110, mean: 80, distribution: RAND_DISTRIBUTION_NORMAL}
    - (RandomizeInt, PlateShiftStrength.right) {min: 70, max: 110, mean: 80, distribution: RAND_DISTRIBUTION_NORMAL}
    - (RandomizeFloat, PlateShiftStrength.falloff) {min: 8, max: 16}
}

// Marinas trench is 11000 meters deep = 110 height units
Prefab OceanSpirit : TectonicSpiritPrefab {
    - SpiritLifetime {youngSteps: 60, matureSteps: 180, oldSteps: 60}
    - (RandomizeInt, PlateShiftStrength.left) {min: -128, max: -90, mean: -100, distribution: RAND_DISTRIBUTION_NORMAL}
    - (RandomizeInt, PlateShiftStrength.right) {min: -128, max: -90, mean: -100, distribution: RAND_DISTRIBUTION_NORMAL}
    - (RandomizeFloat, PlateShiftStrength.falloff) {min:12, max: 16}
}

Prefab HillSpirit : TectonicSpiritPrefab {
    - SpiritLifetime {youngSteps: 40, matureSteps: 100, oldSteps: 40}
    - (RandomizeInt, PlateShiftStrength.left) {min: 20, max: 40}
    - (RandomizeInt, PlateShiftStrength.right) {min: 20, max: 40}
    - (RandomizeFloat, PlateShiftStrength.falloff) {min: 4, max: 16}
}

Prefab SeaSpirit : TectonicSpiritPrefab {
    - SpiritLifetime {youngSteps: 20, matureSteps: 50, oldSteps: 20}
    - (RandomizeInt, PlateShiftStrength.left) {min: -30, max: -10}
    - (RandomizeInt, PlateShiftStrength.right) {min: -30, max: -10}
    - (RandomizeFloat, PlateShiftStrength.falloff) {min: 4, max: 8}
}

Prefab CliffSpirit : TectonicSpiritPrefab {
    - SpiritLifetime {youngSteps: 20, matureSteps: 20, oldSteps: 20}
    - (RandomizeInt, PlateShiftStrength.left) {min: -10, max: 20}
    - (RandomizeInt, PlateShiftStrength.right) {min: -10, max: 20}
    - (RandomizeFloat, PlateShiftStrength.falloff) {min: 4, max: 8}
}

// Prefab TestPlatesPrefab : TectonicSpiritPrefab {
//     - (RandomizeInt, SpiritLifetime.youngSteps) {min: 0, max: 40, mean: 30, distribution: RAND_DISTRIBUTION_NORMAL}
//     - (RandomizeInt, SpiritLifetime.matureSteps) {min: 0, max: 100, mean: 50, distribution: RAND_DISTRIBUTION_NORMAL}
//     - (RandomizeInt, SpiritLifetime.oldSteps) {min: 0, max: 40, mean: 30, distribution: RAND_DISTRIBUTION_NORMAL}
//     - (RandomizeInt, PlateShiftStrength.left) {min: 0, max: 80, mean: 20, distribution: RAND_DISTRIBUTION_NORMAL}
//     - (RandomizeInt, PlateShiftStrength.right) {min: 0, max: 80, mean: 20, distribution: RAND_DISTRIBUTION_NORMAL}
//     - (RandomizeFloat, PlateShiftStrength.falloff) {min: 4, max: 16, mean: 10, distribution: RAND_DISTRIBUTION_NORMAL}
// }

Prefab VolcanoSpirit {
    - ElementalSpirit
    - (Ego, EgoVolcanoSpirit)
    - OVERRIDE|Position
    - OVERRIDE|Elevation
    - OVERRIDE|SpiritPower
    - (RandomizeInt, SpiritLifetime.matureSteps) {min: 500, max: 2500, mean: 1500, distribution: RAND_DISTRIBUTION_NORMAL}
    - SpiritPower {maxValue: 65535}
    - (IsOn, Overworld)
    - (Description, Brief) {"Volcanos raise the land around them, destroying vegetation while active but covering the area in nutrient-rich ash"}
}

Prefab StormSpirit {
    - ElementalSpirit
    - (Ego, EgoStormSpirit)
    - OVERRIDE|Position
    - OVERRIDE|Destination
    - OVERRIDE|Elevation
    - OVERRIDE|SpiritPower
    - SpiritPower {maxValue: 65535}
    - (IsOn, Overworld)
    - (Description, Brief) {"Storm spirits move with the wind, gathering energy from warm bodies of water and releasing it as rain"}
}


mountains_spawner {
    - Spawner{prefab: MountainSpirit, count: 2, oneShot: true}
    - (IsOn, Overworld)
}

oceans_spawner {
    - Spawner{prefab: OceanSpirit, count: 2, oneShot: true}
    - (IsOn, Overworld)
}

hills_spawner {
    - Spawner{prefab: HillSpirit, count: 16, oneShot: true}
    - (IsOn, Overworld)
}

seas_spawner {
    - Spawner{prefab: SeaSpirit, count: 24, oneShot: true}
    - (IsOn, Overworld)
}

cliffs_spawner {
    - Spawner{prefab: CliffSpirit, count: 24, oneShot: true}
    - (IsOn, Overworld)
}

volcano_spawner {
    - Spawner{prefab: VolcanoSpirit, count: 10, oneShot: true}
    - (IsOn, Overworld)
}

storm_spawner {
    - Spawner{prefab: StormSpirit, count: 20, oneShot: true}
    - (IsOn, Overworld)
}

grazer_spawner {
    - Spawner{prefab: GrazerHerd, count: 400, oneShot: true}
    - (IsOn, Overworld)
}

player_spawner {
    - Spawner{prefab: PlayerPrefab, count: 1, oneShot: true}
    - (IsOn, Overworld)
}

