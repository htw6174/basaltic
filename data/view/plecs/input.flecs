bcview {
    // brush tools
    AdditiveBrush {
        - Tool
        - AdditiveBrush {value: 1}
        - BrushSize {radius: 1}
        - (BrushField, bc.planes.CellData.height)
    }

    ValueBrush {
        - Tool
        - ValueBrush {value: 1}
        - BrushSize {radius: 1}
        - (BrushField, bc.planes.CellData.height)
    }

    RiverBrush {
        - Tool
        - RiverBrush {value: 1}
    }

    PrefabBrush {
        - Tool
        - PrefabBrush {prefab: 0}
    }

    // action groups
    groups {
        step_control
        camera_keyboard
        camera_mouse
        terrain_mouse
        river_mouse
        actor_mouse
        player_mouse
    }

    // action bindings
    actions {
        using components.input
        using components.input.Key
        using bcview.systems.input
        using flecs.meta

        with (ActionGroup, groups.step_control) {
            advance_step {
                - ActionButton {system: SingleStep}
                - (ButtonDown, Space)
            }
            auto_step {
                - ActionButton {system: AutoStep}
                - (ButtonDown, P)
            }
            pause_step {
                - ActionButton {system: PauseStep}
                - (ButtonDown, Space)
            }
        }

        with (ActionGroup, groups.camera_keyboard) {
            camera_pan {
                - ActionVector {system: CameraPan}
                - (InputVector, E) {y: 1}
                - (InputVector, D) {y: -1}
                - (InputVector, S) {x: 1}
                - (InputVector, F) {x: -1}
            }
            camera_orbit {
                - ActionVector {system: CameraOrbit}
                - (InputVector, R) {x: 1}
                - (InputVector, W) {x: -1}
                - (InputVector, T) {y: 1}
                - (InputVector, G) {y: -1}
            }
            camera_zoom {
                - ActionVector {system: CameraZoom}
                - (InputVector, X) {y: 1}
                - (InputVector, Z) {y: -1}
            }

            recenter {
                - ActionButton {system: CameraToPlayer}
                - (ButtonDown, C)
            }
        }
        with (ActionGroup, groups.camera_mouse) {
            camera_pan_mouse {
                - ActionVector {system: CameraPan}
                - (InputVector, Mouse.Delta) {0.1, 0.1}
                - Disabled
            }
            camera_pan_mouse_start {
                - ActionButton {system: systems.input.EcsEnable}
                - (ButtonDown, Mouse.Left)
                - (ActionParams, entity) {camera_pan_mouse}
            }
            camera_pan_mouse_end {
                - ActionButton {system: systems.input.EcsDisable}
                - (ButtonUp, Mouse.Left)
                - (ActionParams, entity) {camera_pan_mouse}
            }
            camera_orbit_mouse {
                - ActionVector {system: CameraOrbit}
                - (InputVector, Mouse.Delta) {0.1, 0.1}
                - Disabled
            }
            camera_orbit_mouse_start {
                - ActionButton {system: systems.input.EcsEnable}
                - (ButtonDown, Mouse.Right)
                - (ActionParams, entity) {camera_orbit_mouse}
            }
            camera_orbit_mouse_end {
                - ActionButton {system: systems.input.EcsDisable}
                - (ButtonUp, Mouse.Right)
                - (ActionParams, entity) {camera_orbit_mouse}
            }
            camera_zoom_mouse {
                - ActionVector {system: CameraZoom}
                - (InputVector, Mouse.Wheel) {0, -1}
            }
        }
        with (ActionGroup, groups.terrain_mouse) {
            terrain_modify {
                - ActionVector {system: PaintAdditiveBrush}
                - (InputVector, Mouse.Left) {1, 0}
                - (InputVector, Mouse.Right) {-1, 0}
            }
            terrain_value {
                - ActionButton {system: PaintValueBrush}
                - (ButtonDown, Mouse.Middle)
            }
        }
        with (ActionGroup, groups.river_mouse) {
        }
        with (ActionGroup, groups.actor_mouse) {
        }
        with (ActionGroup, groups.player_mouse) {
            move_player {
                - ActionButton {system: SetPlayerDestination}
                - (ButtonDown, Mouse.Right)
            }
        }
    }
}
