
bcview {
    Prefab DebugDrawPrefab {
        - OVERRIDE|(ShadowPass, DebugShadowPipeline)
        - OVERRIDE|(TransparentPass, DebugTransparentPipeline)
        - Color {1.0, 0.0, 1.0, 1.0}
        - InstanceBuffer
        - DebugRender
    }

    // debug draw
    player : DebugDrawPrefab {
        - Color {0.6, 0.0, 0.8, 1.0}
        - QueryDesc {expr: "Position, (bc.planes.IsOn, _), bc.actors.MapVision"}
    }

    carnivores : DebugDrawPrefab {
        - Color {0.7, 0.0, 0.0, 1.0}
        - QueryDesc {expr: "Position, (bc.planes.IsOn, _), (bc.wildlife.Diet, bc.wildlife.Diet.Meat)"}
    }

    berry_pickers : DebugDrawPrefab {
        - Color {0.7, 0.0, 0.7, 1.0}
        - QueryDesc {expr: "Position, (bc.planes.IsOn, _), (bc.wildlife.Diet, bc.wildlife.Diet.Fruit)"}
    }

    arbivores : DebugDrawPrefab {
        - Color {0.0, 0.7, 0.7, 1.0}
        - QueryDesc {expr: "Position, (bc.planes.IsOn, _), (bc.wildlife.Diet, bc.wildlife.Diet.Foliage)"}
    }

    grazers : DebugDrawPrefab {
        - Color {0.0, 0.7, 0.0, 1.0}
        - QueryDesc {expr: "Position, (bc.planes.IsOn, _), (bc.wildlife.Diet, bc.wildlife.Diet.Grasses)"}
    }

    tectonics : DebugDrawPrefab {
        - Color {0.7, 0.8, 0.7, 1.0}
        - QueryDesc {expr: "Position, (bc.planes.IsOn, _), bc.elementals.PlateShiftStrength"}
    }

    volcanos : DebugDrawPrefab {
        - Color {0.9, 0.5, 0.0, 1.0}
        - QueryDesc {expr: "Position, (bc.planes.IsOn, _), (bc.actors.Ego, bc.actors.Ego.EgoVolcanoSpirit)"}
    }

    storms : DebugDrawPrefab {
        - Color {0.5, 0.5, 0.8, 1.0}
        - QueryDesc {expr: "Position, (bc.planes.IsOn, _), (bc.actors.Ego, bc.actors.Ego.EgoStormSpirit)"}
    }

    // TEST: disable shadow pass by default
    phases.OnPassShadow :- Disabled

    // TEST: default visibility override
    //Visibility :- Visibility {override: 2}

    // brush tools
    AdditiveBrush {
        - Tool
        - AdditiveBrush {value: 1}
        - BrushSize {radius: 1}
        - (BrushField, bc.planes.CellData.height)
    }

    PrefabBrush {
        - Tool
        - PrefabBrush {prefab: 0}
    }

    // input map
    Input {
        using bcview.systems.input
        cameraKeyboardBindings {
            - InputBindGroup
            w :- InputBinding {key: 119, axis: {0, 1}, triggerOn: BC_INPUT_HELD, system: CameraPan}
            a :- InputBinding {key: 97, axis: {1, 0}, triggerOn: BC_INPUT_HELD, system: CameraPan}
            s :- InputBinding {key: 115, axis: {0, -1}, triggerOn: BC_INPUT_HELD, system: CameraPan}
            d :- InputBinding {key: 100, axis: {-1, 0}, triggerOn: BC_INPUT_HELD, system: CameraPan}

            q :- InputBinding {key: 113, axis: {1, 0}, triggerOn: BC_INPUT_HELD, system: CameraOrbit}
            e :- InputBinding {key: 101, axis: {-1, 0}, triggerOn: BC_INPUT_HELD, system: CameraOrbit}
            r :- InputBinding {key: 114, axis: {0, 1}, triggerOn: BC_INPUT_HELD, system: CameraOrbit}
            f :- InputBinding {key: 102, axis: {0, -1}, triggerOn: BC_INPUT_HELD, system: CameraOrbit}

            x :- InputBinding {key: 120, axis: {0, 1}, triggerOn: BC_INPUT_HELD, system: CameraZoom}
            z :- InputBinding {key: 122, axis: {0, -1}, triggerOn: BC_INPUT_HELD, system: CameraZoom}

            c :- InputBinding {key: 99, system: CameraToPlayer}
        }

        cameraMouseBindings {
            - InputBindGroup
            pan :- InputBinding {button: BC_MOUSE_LEFT, triggerOn: BC_INPUT_HELD, motion: BC_MOTION_MOUSE, system: CameraPan}
            orbit :- InputBinding {button: BC_MOUSE_RIGHT, triggerOn: BC_INPUT_HELD, motion: BC_MOTION_MOUSE, system: CameraOrbit}
            // bindings to lock mouse while left or right click held
            lockLeft :- InputBinding {button: BC_MOUSE_LEFT, triggerOn: BC_INPUT_PRESSED, system: LockMouse}
            unlockLeft :- InputBinding {button: BC_MOUSE_LEFT, triggerOn: BC_INPUT_RELEASED, system: UnlockMouse}
            //lockMiddle :- InputBinding {button: BC_MOUSE_MIDDLE, triggerOn: BC_INPUT_PRESSED, system: LockMouse}
            //unlockMiddle :- InputBinding {button: BC_MOUSE_MIDDLE, triggerOn: BC_INPUT_RELEASED, system: UnlockMouse}
            lockRight :- InputBinding {button: BC_MOUSE_RIGHT, triggerOn: BC_INPUT_PRESSED, system: LockMouse}
            unlockRight :- InputBinding {button: BC_MOUSE_RIGHT, triggerOn: BC_INPUT_RELEASED, system: UnlockMouse}
        }
        //cameraMouseBindings :- Disabled

        middleMouseBindings {
            - InputBindGroup
            selectCell :- InputBinding {button: BC_MOUSE_MIDDLE, system: SelectCell}
            zoom :- InputBinding {motion: BC_MOTION_SCROLL, system: CameraZoom}
        }

        actorMouseBindings {
            - InputBindGroup
            spawnPrefab :- InputBinding {button: BC_MOUSE_LEFT, system: PaintPrefabBrush}
        }
        //actorMouseBindings :- Disabled

        playerMouseBindings {
            - InputBindGroup
            selectEntity :- InputBinding {button: BC_MOUSE_LEFT, system: SelectEntity}
            movePlayer :- InputBinding {button: BC_MOUSE_RIGHT, system: SetPlayerDestination}
        }
        //playerMouseBindings :- Disabled

        terrainMouseBindings {
            - InputBindGroup
            raise :- InputBinding {button: BC_MOUSE_LEFT, axis: {1, 0}, system: PaintAdditiveBrush}
            raiseOnMove :- InputBinding {button: BC_MOUSE_LEFT, axis: {1, 0}, motion: BC_MOTION_TILE, system: PaintAdditiveBrush}
            lower :- InputBinding {button: BC_MOUSE_RIGHT, axis: {-1, 0}, system: PaintAdditiveBrush}
            lowerOnMove :- InputBinding {button: BC_MOUSE_RIGHT, axis: {-1, 0}, motion: BC_MOTION_TILE, system: PaintAdditiveBrush}
        }
        //terrainMouseBindings :- Disabled
    }
}
